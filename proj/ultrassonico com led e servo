#include <Servo.h>

Servo meuServo;

// Pinos do sensor 1
const int trig1 = 2;
const int echo1 = 3;

// Pinos do sensor 2
const int trig2 = 4;
const int echo2 = 5;

const int ledPin = 13;
const int servoPin = 9;

// Limite para detectar proximidade em cm
const int limiteDistancia = 20;  // Ajuste conforme a distância desejada

void setup() {
  pinMode(trig1, OUTPUT);
  pinMode(echo1, INPUT);

  pinMode(trig2, OUTPUT);
  pinMode(echo2, INPUT);

  pinMode(ledPin, OUTPUT);

  meuServo.attach(servoPin);
  meuServo.write(0);  // Servo fechado

  Serial.begin(9600);
}

long medirDistancia(int trigPin, int echoPin) {
  // Envia pulso ultrassônico
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Mede o tempo do pulso de eco
  long duracao = pulseIn(echoPin, HIGH, 30000); // timeout 30ms para evitar travar

  // Calcula distância em cm
  long distancia = duracao * 0.034 / 2;

  return distancia;
}

void loop() {
  long dist1 = medirDistancia(trig1, echo1);
  long dist2 = medirDistancia(trig2, echo2);

  Serial.print("Distancia Sensor 1: ");
  Serial.print(dist1);
  Serial.print(" cm | Sensor 2: ");
  Serial.print(dist2);
  Serial.println(" cm");

  // Sensor 1 controla o servo
  if (dist1 > 0 && dist1 < limiteDistancia) {
    meuServo.write(90);  // Abre servo
  } else {
    meuServo.write(0);   // Fecha servo
  }

  // Sensor 2 controla o LED
  if (dist2 > 0 && dist2 < limiteDistancia) {
    digitalWrite(ledPin, HIGH);
  } else {
    digitalWrite(ledPin, LOW);
  }

  delay(100);
}
